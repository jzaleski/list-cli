APPLICATION_ROOT="$(dirname $0)/..";
DOT_ENV_FILE=${DOT_ENV_FILE:-"$APPLICATION_ROOT/.env"};
DOT_ENV_LOCAL_FILE=${DOT_ENV_LOCAL_FILE:-"$APPLICATION_ROOT/.env.local"};
RESET_VENV=${RESET_VENV:-"false"};
VENV_DIR="$APPLICATION_ROOT/.venv";


_activate_venv () {
  _deactivate_venv;
  export LANG="en_US.UTF-8" LC_ALL="en_US.UTF-8";
  source "$VENV_DIR/bin/activate";
}

_create_venv_if_applicable () {
  if [ ! -e "$VENV_DIR" ]; then
    python -m venv $VENV_DIR;
  fi
}

_deactivate_venv () {
  if [ -n "$VIRTUAL_ENV" ]; then
    deactivate > /dev/null 2>&1 || true;
    unset \
      LANG \
      LC_ALL \
      VIRTUAL_ENV;
  fi
}

_load_env_files () {
  if [ -e "$DOT_ENV_FILE" ]; then
    source $DOT_ENV_FILE;
  fi

  if [ -e "$DOT_ENV_LOCAL_FILE" ]; then
    source $DOT_ENV_LOCAL_FILE;
  fi
}

_run () {
  _activate_venv;

  python $APPLICATION_ROOT/list/cli.py $@;
}

_setup () {
  _activate_venv;

  pip install --upgrade pip setuptools;

  requirements_first_file="$APPLICATION_ROOT/requirements-first.txt";
  if [ -e "$requirements_first_file" ]; then
    pip install --requirement "$requirements_first_file";
  fi

  pip install \
    --global-option=build_ext \
    --global-option="-I/usr/local/opt/openssl/include" \
    --global-option="-L/usr/local/opt/openssl/lib" \
    --requirement "$APPLICATION_ROOT/requirements.txt";

  requirements_dev_file="$APPLICATION_ROOT/requirements-dev.txt";
  if [ -e "$requirements_dev_file" ]; then
    pip install --requirement "$requirements_dev_file";
  fi

  requirements_last_file="$APPLICATION_ROOT/requirements-last.txt";
  if [ -e "$requirements_last_file" ]; then
    pip install --requirement "$requirements_last_file";
  fi
}

_reset_venv_if_applicable () {
  if [ "$RESET_VENV" = "true" ]; then
    if [ -e $VENV_DIR ]; then
      echo "Clearing an existing venv..."
      _deactivate_venv;
      rm -r $VENV_DIR;
    fi
  fi
}

run () {
  _deactivate_venv;
  _load_env_files;
  _create_venv_if_applicable;
  _run $@;
}

setup () {
  _deactivate_venv;
  _load_env_files;
  _create_venv_if_applicable;
  _setup;
}
